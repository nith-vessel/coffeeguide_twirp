// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: google/protobuf/source_context.proto
/* eslint-disable */
import { BinaryReader, BinaryWriter } from "protoscript";
//========================================//
//        Protobuf Encode / Decode        //
//========================================//
export const SourceContext = {
    /**
     * Serializes SourceContext to protobuf.
     */
    encode: function (msg) {
        return SourceContext._writeMessage(msg, new BinaryWriter()).getResultBuffer();
    },
    /**
     * Deserializes SourceContext from protobuf.
     */
    decode: function (bytes) {
        return SourceContext._readMessage(SourceContext.initialize(), new BinaryReader(bytes));
    },
    /**
     * Initializes SourceContext with all fields set to their default value.
     */
    initialize: function () {
        return {
            fileName: "",
        };
    },
    /**
     * @private
     */
    _writeMessage: function (msg, writer) {
        if (msg.fileName) {
            writer.writeString(1, msg.fileName);
        }
        return writer;
    },
    /**
     * @private
     */
    _readMessage: function (msg, reader) {
        while (reader.nextField()) {
            const field = reader.getFieldNumber();
            switch (field) {
                case 1: {
                    msg.fileName = reader.readString();
                    break;
                }
                default: {
                    reader.skipField();
                    break;
                }
            }
        }
        return msg;
    },
};
//========================================//
//          JSON Encode / Decode          //
//========================================//
export const SourceContextJSON = {
    /**
     * Serializes SourceContext to JSON.
     */
    encode: function (msg) {
        return JSON.stringify(SourceContextJSON._writeMessage(msg));
    },
    /**
     * Deserializes SourceContext from JSON.
     */
    decode: function (json) {
        return SourceContextJSON._readMessage(SourceContextJSON.initialize(), JSON.parse(json));
    },
    /**
     * Initializes SourceContext with all fields set to their default value.
     */
    initialize: function () {
        return {
            fileName: "",
        };
    },
    /**
     * @private
     */
    _writeMessage: function (msg) {
        const json = {};
        if (msg.fileName) {
            json["fileName"] = msg.fileName;
        }
        return json;
    },
    /**
     * @private
     */
    _readMessage: function (msg, json) {
        const _fileName = json["fileName"] ?? json["file_name"];
        if (_fileName) {
            msg.fileName = _fileName;
        }
        return msg;
    },
};
