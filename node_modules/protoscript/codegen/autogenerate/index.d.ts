import { type FileDescriptorProto } from "google-protobuf/google/protobuf/descriptor_pb.js";
import { type UserConfig } from "../../cli/core.js";
import { type Plugin } from "../../plugin.js";
import { IdentifierTable } from "../utils.js";
export declare function printComments(comment: string): string;
export declare function printHeading(heading: string): string;
declare let config: {
    isTS: boolean;
    json: {
        emitFieldsWithDefaultValues: boolean;
        useProtoFieldName: boolean;
    };
    typescript: {
        emitDeclarationOnly: boolean;
    };
};
export declare type Config = typeof config;
export declare function printIfTypescript(str: string): string;
export declare function generate(fileDescriptorProto: FileDescriptorProto, identifierTable: IdentifierTable, options: Pick<UserConfig, "language" | "json" | "typescript">, plugins: Plugin[]): string;
export {};
